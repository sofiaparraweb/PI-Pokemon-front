{"version":3,"sources":["redux/action-types.js","redux/actions.js","components/CARD/Card.jsx","components/PAGINATION/Pagination.jsx","components/SEARCHBAR/SearchBar.jsx","components/FILTERSORTBUTTON/FilterSortButton.jsx","components/NAVBAR/NavBar.jsx","components/CARDS/Cards.jsx","views/DETAIL/Detail.jsx","views/CREATE/Validation.js","views/CREATE/Create.jsx","views/HOME/Home.jsx","views/ABOUT/About.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["GET_POKEMONS","GET_ALL_POKEMONS","GET_POKEMON_NAME","GET_POKEMON_DETAIL","FILTER_TYPE","FILTER_DBAPI","ORDER_BY_NAME","ORDER_BY_ATTACK","GET_POKEMON_TYPE","GET_POKEMON_IMG","getPokemons","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","pokemons","wrap","_context","prev","next","axios","get","sent","data","type","payload","t0","console","log","Error","stop","_x","apply","arguments","getAllPokemons","orderByAttack","value","orderByName","name","Card","props","_jsx","className","children","_jsxs","Link","to","concat","id","style","textDecoration","src","image","alt","attack","defense","types","Pagination","page","setPage","max","pageNumbers","Array","from","length","_","i","disabled","onClick","map","pageNumber","SearchBar","handleSearchSubmit","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","onSubmit","event","preventDefault","placeholder","onChange","target","FilterSortButton","useDispatch","useSelector","state","_React$useState","React","_React$useState2","selectedType","setSelectedType","_React$useState3","_React$useState4","selectedOrigin","setSelectedOrigin","userPokemons","useEffect","_ref4","_callee4","pokemonTypes","_context4","join","_x4","split","trim","origin","NavBar","setName","_useState3","_useState4","setLoading","_ref3","_callee3","pokemonName","_context3","_x3","getPokemonName","Cards","filteredPokemons","loading","perPage","Math","ceil","isArray","Object","keys","speed","height","weight","slice","pokemon","Detail","obj","pokemonsDetail","useParams","isLoading","setIsLoading","_ref2","_callee2","pokemonDetail","_context2","_x2","getPokemonDetail","then","constructor","life","index","validatePokemon","newPokemon","errors","newErrors","_objectSpread","test","Create","setNewPokemon","setErrors","_useState5","_useState6","setIsSubmitClicked","_useState7","_useState8","formValid","setFormValid","changeHandler","property","typeIndex","indexOf","prevPokemon","_toConsumableArray","filter","_defineProperty","prevErrors","submitHandler","values","some","val","abrupt","post","res","Swal","fire","title","text","icon","confirmButtonColor","confirmButtonText","catch","err","errorMessage","message","server","pokemonImages","_useState9","_useState10","selectedImage","setSelectedImage","_ref5","_callee6","pokemonData","_context6","results","Promise","all","_ref6","_callee5","result","pokemonResponse","_context5","url","sprites","other","dream_world","front_default","_x6","_x5","isValid","every","min","multiple","label","imageUrl","Home","About","href","rel","defaults","baseURL","App","useLocation","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allPokemons","rootReducer","undefined","action","isAscendingAttack","sortedPokemonsAttack","sort","a","b","attackA","parseInt","attackB","isNaN","isAscendingName","sortedPokemonsName","nameA","toUpperCase","nameB","filteredTypePokemons","includes","filteredDbApi","alert","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","Provider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.6c0a11ee.chunk.js","sourcesContent":["export const GET_POKEMONS = 'GET_POKEMONS'\nexport const GET_ALL_POKEMONS = 'GET_ALL_POKEMONS'\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME'\nexport const GET_POKEMON_DETAIL = 'GET_POKEMON_DETAIL'\nexport const FILTER_TYPE = 'FILTER_TYPE';\nexport const FILTER_DBAPI = 'FILTER_DBAPI';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const ORDER_BY_ATTACK = 'ORDER_BY_ATTACK';\nexport const GET_POKEMON_TYPE = 'GET_POKEMON_TYPE';\nexport const GET_POKEMON_IMG = 'GET_POKEMON_IMG'\n\n","import axios from 'axios';\nimport {\n  GET_POKEMONS,\n  GET_ALL_POKEMONS,\n  GET_POKEMON_DETAIL,\n  GET_POKEMON_NAME,\n  FILTER_TYPE,\n  FILTER_DBAPI,\n  GET_POKEMON_TYPE,\n  ORDER_BY_NAME,\n  ORDER_BY_ATTACK,\n  GET_POKEMON_IMG,\n} from './action-types';\n\nexport const getPokemons = () => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get('/pokemons');\n      const pokemons = response.data;\n      dispatch({ type: GET_POKEMONS, payload: pokemons });\n    } catch (error) {\n      console.log('Error fetching Pokemons:', error);\n      throw new Error('Failed to fetch Pokemons');\n    }\n  };\n};\n\nexport const getAllPokemons = () => {\n  return { type: GET_ALL_POKEMONS };\n};\n\nexport const getPokemonDetail = (id) => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/pokemons/${id}`);\n      const pokemonDetail = response.data;\n      dispatch({ type: GET_POKEMON_DETAIL, payload: pokemonDetail });\n    } catch (error) {\n      console.log(`Error fetching Pokemon detail for ID ${id}:`, error);\n      throw new Error('Failed to fetch Pokemon detail');\n    }\n  };\n};\n\nexport const getPokemonName = (name) => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/pokemons?name=${name}`);\n      const pokemonName = response.data;\n      dispatch({ type: GET_POKEMON_NAME, payload: pokemonName });\n    } catch (error) {\n      console.log(`Error fetching Pokemon name for \"${name}\":`, error);\n      throw new Error('Failed to fetch Pokemon name');\n    }\n  };\n};\n\nexport const getPokemonsByType = () => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`/types`);\n      const pokemonTypes = response.data.map((type) => type.name).join(\",\");\n      dispatch({ type: GET_POKEMON_TYPE, payload: pokemonTypes });\n    } catch (error) {\n      console.log('Error fetching Pokemon types:', error);\n      throw new Error('Failed to fetch Pokemon types');\n    }\n  };\n};\n\nexport const getPokemonImages = () => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=10');\n      const pokemonData = response.data.results;\n     // Utiliza \"Promise.all\" para realizar múltiples solicitudes GET simultáneas para obtener las imágenes de los Pokémon\n     const pokemonImages = await Promise.all(\n      pokemonData.map(async (result) => {\n        // Realiza una solicitud GET a la URL específica del Pokémon para obtener más detalles, incluyendo la imagen\n        const pokemonResponse = await axios.get(result.url);\n        // Retorna la URL de la imagen de los Pokémon en el formato deseado\n        return pokemonResponse.data.sprites.other.dream_world.front_default;\n      })\n    );\n      dispatch({ type: GET_POKEMON_IMG, payload: pokemonImages });\n    } catch (error) {\n      console.log('Error fetching Pokemon images:', error);\n      throw new Error('Failed to fetch Pokemon images');\n    }\n  };\n};\n\nexport const filterType = (value) => {\n  return { type: FILTER_TYPE, payload: value };\n};\n\nexport const filterDbApi = (value) => {\n  return { type: FILTER_DBAPI, payload: value };\n};\n\nexport const orderByAttack = (value) => {\n  return { type: ORDER_BY_ATTACK, payload: value };\n};\n\nexport const orderByName = (name) => {\n  return { type: ORDER_BY_NAME, payload: name };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <div className=\"card\">\n        <div className=\"front\">\n          <Link to={`/detail/${props.id}`} className=\"card-link\" style={{ textDecoration: 'none' }}>\n            <img className=\"card-image\" src={props.image} alt=\"Pokemon\" />\n            <p className=\"card-name\">{props.name}</p>\n          </Link>\n        </div>\n        <div className=\"back\">\n          <Link to={`/detail/${props.id}`} className=\"card-link\" style={{ textDecoration: 'none' }}>\n            <p className=\"card-stat\">ATTACK: {props.attack}</p>\n            <p className=\"card-stat\">DEFENSE: {props.defense}</p>\n            <p className=\"card-stat\">TYPE: {props.types}</p>\n            {/* hacer un map para que me aparezcan separados */}\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import './Pagination.css';\n\nconst Pagination = ({ page, setPage, max}) => {\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n\n  const previousPage = () => {\n    setPage(page - 1);\n  };\n\n  const pageNumbers = Array.from({ length: max }, (_, i) => i + 1);\n\n  return (\n    <div className=\"pagination-container\">\n      <button\n        disabled={page === 1 || page < 1}\n        onClick={previousPage}\n        className=\"pagination-button\"\n      >\n       {'<'}\n      </button>\n      {pageNumbers.map((pageNumber) => (\n        <button\n          key={pageNumber}\n          onClick={() => setPage(pageNumber)}\n          className={pageNumber === page ? 'current-page' : 'pagination-button'}\n        >\n          {pageNumber}\n        </button>\n      ))}\n      <button\n        disabled={page === max}\n        onClick={nextPage}\n        className=\"pagination-button\"\n      >\n        {'>'}\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './SearchBar.css';\n\nconst SearchBar = ({ handleSearchSubmit }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleSearchSubmit(searchTerm); // Envía el término de búsqueda al componente padre\n    setSearchTerm('');\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"SearchBar\">\n      <div className=\"searchContainer\">\n        <input type=\"text\" placeholder=\"Search Pokemon...\" value={searchTerm} onChange={handleInputChange} />\n        <button type=\"submit\">\n          <img src=\"https://static.vecteezy.com/system/resources/previews/009/589/872/original/magnifying-icon-magnifying-clipart-transparent-free-png.png\" alt=\"Search\" />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderByAttack, orderByName, filterType, getPokemonsByType, filterDbApi, getAllPokemons } from '../../redux/actions';\nimport './FilterSortButton.css';\n\nfunction FilterSortButton({setPage}) {\n  const dispatch = useDispatch();\n  const types = useSelector(state => state.types);\n  const [selectedType, setSelectedType] = React.useState('');\n  const [selectedOrigin, setSelectedOrigin] = React.useState('');\n  const userPokemons = useSelector(state => state.userPokemons);\n \n  useEffect(() => {\n    dispatch(getPokemonsByType());\n  }, [dispatch]);\n\n  const handleOrderAttackUP = () => {\n    dispatch(orderByAttack(\"asc\"));\n    setPage(1);\n  };\n\n  const handleOrderAttackDOWN = () => {\n    dispatch(orderByAttack(\"desc\"));\n    setPage(1);\n  };\n\n  const handleOrderNameUP = () => {\n    dispatch(orderByName(\"asc\"));\n    setPage(1)\n  };\n\n  const handleOrderNameDOWN = () => {\n    dispatch(orderByName(\"desc\"));\n    setPage(1)\n  };\n\n  const handleFilterType = (event) => {\n    const type = event.target.value;\n    setSelectedType(type);\n    dispatch(filterType(type));\n    setPage(1)\n  };\n\n  const handleFilterDbApi = (event) => {\n    const origin = event.target.value;\n    console.log(origin);\n    setSelectedOrigin(origin);\n    dispatch(filterDbApi(origin));\n    setPage(1);\n  };\n  \n  const deleteFilters = () => {\n    setSelectedType('');\n    setSelectedOrigin('');\n    dispatch(getAllPokemons());\n    setPage(1);\n  }\n\n  return (\n    <div className=\"FilterSortButton\">\n      <h2>FILTERS:</h2>\n      <h3>TYPE</h3>\n      <select value={selectedType} onChange={handleFilterType} className='buttonType'>\n        <option value=\"\">All Types</option>\n        {types && types.split(',').map((type) => (\n          <option key={type.trim()} value={type.trim()}>\n            {type.trim()}\n          </option>\n        ))}\n      </select>\n      <h3>ORIGIN</h3>\n      <select value={selectedOrigin} onChange={handleFilterDbApi} className='buttonOrigin'>\n        <option value=\"\">All Origins</option>\n        <option value=\"API\">ORIGINALS</option>\n        <option value=\"DATABASE\">CREATED BY YOU</option>\n      </select>\n      <h3>BY ATTACK</h3>\n      <div className=\"buttonAttack\">\n      <button onClick={handleOrderAttackDOWN}>+</button>\n        <button onClick={handleOrderAttackUP}>-</button>\n      </div>\n      <h3>BY NAME</h3>\n      <div className=\"buttonName\">\n        <button onClick={handleOrderNameUP}>A-Z</button>\n        <button onClick={handleOrderNameDOWN}>Z-A</button>\n      </div>\n      <div className='buttonDelete'>\n        <button onClick={deleteFilters}>DELETE FILTERS</button>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterSortButton;\n","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getPokemonName, getPokemons, getAllPokemons } from '../../redux/actions';\nimport SearchBar from '../SEARCHBAR/SearchBar';\nimport './NavBar.css';\nimport FilterSortButton from '../FILTERSORTBUTTON/FilterSortButton';\n\nconst NavBar = ({setPage}) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {  \n  console.log(\"Fetching Pokemons\");\n  dispatch(getPokemons());\n  }, [dispatch]);\n\n  const handleSearchSubmit = name => {\n    setLoading(true);\n    dispatch(getPokemonName(name));\n    setName('');\n  };\n\n  const handleLogoClick = () => {\n    dispatch(getAllPokemons()); // Llama a la acción para obtener todos los pokemons sin filtrar\n  };\n  \n  return (\n    <div className='NavBar'>\n      <Link to='/' className=\"logo\" onClick={handleLogoClick}>\n        <img\n          src=\"https://i.pinimg.com/originals/9e/39/23/9e3923825ba4a4fa967858f980b8460f.png\"\n          alt=\"Pokemon Logo\"\n        />\n      </Link>\n      <div className='searchBar'>\n        <SearchBar handleSearchSubmit={handleSearchSubmit} />\n      </div>\n      <div className='buttons'>\n        <FilterSortButton setPage={setPage}/>\n      </div>\n      <div>\n        <Link to='/create' className=\"create\">\n          CREATE YOUR POKEMON\n        </Link>\n        <Link to='/about' className=\"about\">\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/16/16363.png\"\n            alt=\"About Logo\"\n          />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\nimport Card from '../CARD/Card';\nimport './Cards.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPokemons } from '../../redux/actions';\nimport Pagination from '../PAGINATION/Pagination';\nimport NavBar from '../NAVBAR/NavBar';\n\nconst Cards = () => {\n  const dispatch = useDispatch();\n  const pokemons = useSelector(state => state.pokemons);\n  const filteredPokemons = useSelector(state => state.filteredPokemons);\n  const loading = useSelector(state => state.loading); \n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(12);\n\n  const max = Math.ceil(filteredPokemons.length / perPage);\n\n  useEffect(() => {\n    dispatch(getPokemons());\n  }, [dispatch]);\n\n\n  if (loading || pokemons.length === 0) {\n    // Si se está cargando, mostrar la imagen giratoria de la Poké Ball y el mensaje\n    return (\n      <div className=\"loading-container\">\n      <img src=\"https://cdn-icons-png.flaticon.com/512/6356/6356630.png\" alt=\"Loading Pokeball\" className=\"loading-image\" />\n      <p className=\"loading-text\">POKEMONS ARE ARRIVING HOME...</p>\n    </div>\n    \n    );\n  }\n\n  if (!Array.isArray(pokemons)) {\n    if (typeof pokemons === 'object' && Object.keys(pokemons).length > 0) {\n      // Si pokemons es un objeto y tiene datos, significa que se recibió un único pokemon\n      const { id, name, image, attack, defense, speed, height, weight, types } = pokemons;\n      return (\n        <div className='pokemon-container'>\n          <NavBar setPage={setPage}/>\n          <div className='pokemon-selected'>\n            <Card \n              key={id}\n              id={id}\n              name={name}\n              image={image}\n              attack={attack}\n              defense={defense}\n              speed={speed}\n              height={height}\n              weight={weight}\n              types={types}\n              className=\"card-selected\"\n              setPage={setPage}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      // Si no es un array ni un objeto con datos, se muestra el mensaje de carga\n      console.log('pokemons:', pokemons);\n      return <div>Loading your pokemon...</div>;\n    }\n  }\n  \n  return (\n    <div>\n      <NavBar setPage={setPage}/>\n      <div className=\"cards-container\">\n        {(filteredPokemons.length > 0 ? filteredPokemons : pokemons)\n          .slice((page - 1) * perPage, (page - 1) * perPage + perPage)\n          .map(pokemon => (\n            <Card\n              key={pokemon.id}\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.image}\n              attack={pokemon.attack}\n              defense={pokemon.defense}\n              speed={pokemon.speed}\n              height={pokemon.height}\n              weight={pokemon.weight}\n              types={pokemon.types}\n              setPage={setPage}\n            />\n          ))}\n      </div>\n      {pokemons.length === 0 && (\n  <div className=\"no-results-container\">\n    <img src=\"https://assets.stickpng.com/images/5a0596df9cf05203c4b60445.png\" alt=\"No Results\" className=\"no-results-image\" />\n    <p>No results found.</p>\n  </div>\n)}\n      {pokemons.length > 0 && (\n        <div>\n          <Pagination page={page} setPage={setPage} max={max} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPokemonDetail } from '../../redux/actions';\nimport './Detail.css';\nimport { NavBar } from '../../components/index';\n\nconst Detail = () => {\n  const dispatch = useDispatch();\n  const { pokemonsDetail } = useSelector((state) => state);\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(getPokemonDetail(id)).then(() => {\n      setIsLoading(false);\n    });\n  }, [id, dispatch]);\n\n  function isEmptyObject(obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  return (\n    <div className=\"detail-container\">\n      {isLoading ? (\n        <div className=\"loading-container\">\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/6356/6356630.png\"\n            alt=\"Loading Pokeball\"\n            className=\"loading-image\"\n          />\n          <p className=\"loading-text\">POKEMONS ARE ARRIVING HOME...</p>\n        </div>\n      ) : (\n        !isEmptyObject(pokemonsDetail) ? (\n          <div>\n            <div className=\"detail-title\">{pokemonsDetail.name}</div>\n            <div className=\"detail-content\">\n              <img\n                className=\"detail-image\"\n                src={pokemonsDetail.image}\n                alt={pokemonsDetail.name}\n              />\n              <div className=\"detail-info\">\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://cdn-icons-png.flaticon.com/512/44/44839.png\"\n                    alt=\"HP\"\n                  />{' '}\n                  HP: {pokemonsDetail.life}\n                </p>\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://icones.pro/wp-content/uploads/2022/07/symbole-d-eclair-noir.png\"\n                    alt=\"ATTACK\"\n                  />{' '}\n                  ATTACK: {pokemonsDetail.attack}\n                </p>\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://cdn-icons-png.flaticon.com/512/81/81137.png\"\n                    alt=\"DEFENSE\"\n                  />{' '}\n                  DEFENSE: {pokemonsDetail.defense}\n                </p>\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://www.pngmart.com/files/16/Meter-Speed-PNG-Photos.png\"\n                    alt=\"SPEED\"\n                  />\n                  SPEED: {pokemonsDetail.speed}\n                </p>\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://static.thenounproject.com/png/2395974-200.png\"\n                    alt=\"HEIGHT\"\n                  />{' '}\n                  HEIGHT: {pokemonsDetail.height}\n                </p>\n                <p>\n                  <img\n                    className=\"detail-icon\"\n                    src=\"https://static.vecteezy.com/system/resources/previews/002/608/040/original/weight-scale-measuring-equipment-line-icon-design-free-vector.jpg\"\n                    alt=\"WEIGHT\"\n                  />{' '}\n                  WEIGHT: {pokemonsDetail.weight}\n                </p>\n                <div className=\"detail-types\">\n                  <p>TYPE:</p>\n                  {pokemonsDetail.types && (\n                    <div>\n                  {pokemonsDetail.types.split(', ').map((type, index) => (\n                        <p key={index}>{type}</p>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"detail-back-link\">\n              <Link to=\"/\">\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/48/48821.png\"\n                  alt=\"Back Home\"\n                />\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <p>Loading...</p>\n          </div>\n        )\n      )}\n      <NavBar />\n    </div>\n  );\n};\n\nexport default Detail;\n","export const validatePokemon = (newPokemon, errors) => {\n  const newErrors = { ...errors };\n\n// Validar el nombre del pokemon\nif (!newPokemon.name) {\n  newErrors.name = 'Please fill in this field';\n} else if (!/^[a-zA-Z]+$/.test(newPokemon.name)) {\n  newErrors.name = 'Name can only contain letters';\n} else {\n  newErrors.name = '';\n}\n\n  // Validar la vida del pokemon\n  if (!newPokemon.life) {\n    newErrors.life = 'Please choose a value';\n  } else if (newPokemon.life < 1 || newPokemon.life > 150) {\n    newErrors.life = 'HP must be between 1 and 150';\n  } else {\n    newErrors.life = '';\n  }\n\n  // Validar el ataque del pokemon\n  if (!newPokemon.attack) {\n    newErrors.attack = 'Please choose a value';\n  } else if (newPokemon.attack < 1 || newPokemon.attack > 250) {\n    newErrors.attack = 'Attack must be between 1 and 250';\n  } else {\n    newErrors.attack = '';\n  }\n\n  // Validar la defensa del pokemon\n  if (!newPokemon.defense) {\n    newErrors.defense = 'Please choose a value';\n  } else if (newPokemon.defense < 1 || newPokemon.defense > 250) {\n    newErrors.defense = 'Defense must be between 1 and 250';\n  } else {\n    newErrors.defense = '';\n  }\n\n  // Validar el tipo del pokemon\n  if (!newPokemon.type || newPokemon.type.length === 0) {\n    newErrors.type = 'Please select at least one type';\n  } else {\n    newErrors.type = '';\n  }\n\n  return newErrors;\n};\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { validatePokemon } from './Validation';\nimport './Create.css';\nimport { getPokemonImages } from '../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavBar } from '../../components/index';\nimport Swal from 'sweetalert';\n\nconst Create = () => {\n  const [newPokemon, setNewPokemon] = useState({\n    name: '',\n    image: '',\n    life: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    type: [],\n  });\n\n  const types = [\n    { value: '', label: 'Select a type' },\n    { value: 'normal', label: 'Normal' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'water', label: 'Water' },\n    { value: 'electric', label: 'Electric' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'ice', label: 'Ice' },\n    { value: 'fighting', label: 'Fighting' },\n    { value: 'poison', label: 'Poison' },\n    { value: 'ground', label: 'Ground' },\n    { value: 'flying', label: 'Flying' },\n    { value: 'psychic', label: 'Psychic' },\n    { value: 'bug', label: 'Bug' },\n    { value: 'rock', label: 'Rock' },\n    { value: 'ghost', label: 'Ghost' },\n    { value: 'dragon', label: 'Dragon' },\n    { value: 'dark', label: 'Dark' },\n    { value: 'steel', label: 'Steel' },\n    { value: 'fairy', label: 'Fairy' },\n  ];\n\n  const [errors, setErrors] = useState({\n    name: '',\n    image: '',\n    life: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    type: '',\n  });\n\n  const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n\n  const changeHandler = (event) => {\n    const property = event.target.name;\n    const value = event.target.value;\n\n    //para seleccionar mas de un tipo\n    if (property === 'type') {\n      const typeIndex = newPokemon.type.indexOf(value);\n      if (typeIndex === -1) {\n        setNewPokemon((prevPokemon) => ({\n          ...prevPokemon,\n          type: [...prevPokemon.type, value],\n        }));\n      } else {\n        setNewPokemon((prevPokemon) => ({\n          ...prevPokemon,\n          type: prevPokemon.type.filter((type) => type !== value),\n        }));\n      }\n    } \n    //para otros campos\n    else {\n      setNewPokemon((prevPokemon) => ({\n        ...prevPokemon,\n        [property]: value,\n      }));\n    }\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [property]: validatePokemon({ ...newPokemon, [property]: value }, prevErrors)[property],\n    }));\n  };\n  \n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    setIsSubmitClicked(true);\n\n    setErrors(validatePokemon(newPokemon, errors));\n\n    if (Object.values(errors).some((val) => val !== '')) {\n      return;\n    }\n    \n    const { name, image, life, attack, defense, speed, height, weight, type } = newPokemon\n    let pokemon = {name:name, image:image, life:life, attack:attack, defense:defense, type:type}\n    if(speed.length)pokemon={...pokemon,speed:speed}\n    if(height.length)pokemon={...pokemon,height:height}\n    if(weight.length)pokemon={...pokemon,weight:weight}\n    if( name.length && image.length && life.length && attack.length && defense.length && type.length){\n    axios\n      .post('https://pokemon-back-jt9f.onrender.com/pokemons', pokemon)\n      .then((res) => {\n        console.log(res);\n        Swal.fire({\n          title: 'FELICITACIONES!',\n          text: res.data,\n          icon: 'success',\n          confirmButtonColor: '#3085d6',\n          confirmButtonText: 'Aceptar',\n        });\n        setNewPokemon({\n          name: '',\n          image: '',\n          life: '',\n          attack: '',\n          defense: '',\n          speed: '',\n          height: '',\n          weight: '',\n          type: [],\n        });\n        setErrors({\n          name: '',\n          image: '',\n          life: '',\n          attack: '',\n          defense: '',\n          speed: '',\n          height: '',\n          weight: '',\n          type: '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          const errorMessage = err.response.data.message;\n          setErrors((prevErrors) => ({\n            ...prevErrors,\n            server: errorMessage,\n          }));\n        } else {\n          setErrors((prevErrors) => ({\n            ...prevErrors,\n            server: 'Failed to create Pokemon',\n          }));\n        }\n      });}\n  };\n\n  const dispatch = useDispatch();\n  const pokemonImages = useSelector((state) => state.pokemonImages);\n  const [selectedImage, setSelectedImage] = useState('');\n\n  useEffect(() => {\n    dispatch(getPokemonImages());\n  }, [dispatch]);\n\n  const handleImageChange = (event) => {\n    setSelectedImage(event.target.value);\n    setNewPokemon((pokemon)=>({\n      ...pokemon,\n      image: event.target.value\n    }))\n  };\n\n  const renderImages = () => {\n    if (pokemonImages.length === 0) {\n      return <span>Loading...</span>;\n    }\n    return pokemonImages.map((imageUrl, index) => (\n      <img\n        key={index}\n        src={imageUrl}\n        alt={`Image ${index + 1}`}\n        className={selectedImage === imageUrl ? 'selected' : ''}\n        onClick={() => setSelectedImage(imageUrl)}\n      />\n    ));\n  };\n\n  useEffect(() => {\n    const isValid = Object.values(errors).every((val) => val === '');\n    setFormValid(isValid);\n  }, [errors]);\n\n  return (\n    <div>\n      <form onSubmit={submitHandler} className=\"form\">\n        <h1>CREATE YOUR POKEMON</h1>\n        <div>\n          <label>Name *</label>\n          <input type=\"text\" value={newPokemon.name} onChange={changeHandler} name=\"name\" />\n          {errors.name && <span>{errors.name}</span>}\n        </div>\n        <div>\n          <label>HP *</label>\n          <div className=\"range-container\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"150\"\n              value={newPokemon.life || '20'}\n              onChange={changeHandler}\n              name=\"life\"\n            />\n            <span className=\"range-value\">{newPokemon.life}</span>\n          </div>\n          {errors.life && <span>{errors.life}</span>}\n        </div>\n  \n      <div>\n        <label>Attack *</label>\n        <div className=\"range-container\">\n          <input type=\"range\" min=\"0\" max=\"100\" value={newPokemon.attack || '20'} onChange={changeHandler} name=\"attack\" />\n          <span className=\"range-value\">{newPokemon.attack}</span>\n        </div>\n        {errors.attack && <span>{errors.attack}</span>}\n      </div>\n  \n      <div>\n        <label>Defense *</label>\n        <div className=\"range-container\">\n          <input type=\"range\" min=\"0\" max=\"100\" value={newPokemon.defense || '20'} onChange={changeHandler} name=\"defense\" />\n          <span className=\"range-value\">{newPokemon.defense}</span>\n        </div>\n        {errors.defense && <span>{errors.defense}</span>}\n      </div>\n  \n      <div>\n        <label>Speed</label>\n        <div className=\"range-container\">\n          <input type=\"range\" min=\"0\" max=\"100\"  value={newPokemon.speed || '20'} onChange={changeHandler} name=\"speed\" />\n          <span className=\"range-value\">{newPokemon.speed}</span>\n        </div>\n        {errors.speed && <span>{errors.speed}</span>}\n      </div>\n  \n      <div>\n        <label>Height</label>\n        <div className=\"range-container\">\n          <input type=\"range\" min=\"0\" max=\"100\" value={newPokemon.height || '20'} onChange={changeHandler} name=\"height\" />\n          <span className=\"range-value\">{newPokemon.height}</span>\n        </div>\n        {errors.height && <span>{errors.height}</span>}\n      </div>\n  \n      <div>\n        <label>Weight</label>\n        <div className=\"range-container\">\n          <input type=\"range\" min=\"0\" max=\"100\" value={newPokemon.weight || '20'} onChange={changeHandler} name=\"weight\" />\n          <span className=\"range-value\">{newPokemon.weight}</span>\n        </div>\n        {errors.weight && <span>{errors.weight}</span>}\n      </div>\n  \n      <div className=\"type-select-container\">\n        <label>Type *</label>\n        <select value={newPokemon.type} onChange={changeHandler} name=\"type\" multiple>\n          {types.map((type) => (\n            <option key={type.value} value={type.value}>\n              {type.label}\n            </option>\n          ))}\n        </select>\n        {errors.type && <span>{errors.type}</span>}\n      </div>\n      \n      <div>\n        <label>Select an Image: *</label>\n        <div className=\"image-container\">\n          <select onChange={handleImageChange} value={selectedImage}>\n            <option value=\"\">Select Image</option>\n            {pokemonImages.map((imageUrl, index) => (\n              <option key={index} value={imageUrl}>\n                 {index + 1}\n              </option>\n            ))}\n          </select>\n          {selectedImage && (\n            <img src={selectedImage} alt=\"Selected Pokemon\" className=\"selected-image\" />\n          )}\n        </div>\n      </div>\n  \n      <button type=\"submit\" disabled={!formValid}>\n          CREATE POKEMON\n        </button>\n      </form>\n      <NavBar />\n    </div>\n  );\n};\n\nexport default Create;\n","import { useSelector } from 'react-redux';\nimport { Cards, NavBar } from '../../components/index'\n\nconst Home = () => {\n    \nconst pokemons = useSelector((state) => state.pokemons)\n    \n    return (\n        <div className=''>\n            <div>\n                <NavBar />\n                <Cards pokemons={pokemons}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\nimport './About.css';\nimport { NavBar } from '../../components/index';\n\nconst About = () => {\n  return (\n    <div className='About'>\n      <aside className=\"profile-card\">\n        <header>\n          <div className=\"avatar-container\">\n            <img src=\"https://static.vecteezy.com/system/resources/previews/011/675/380/original/female-avatar-images-png.png\" className=\"imgAvatar\" alt=\"Avatar\" />\n          </div>\n          <h1>SOFIA PARRA</h1>\n          <h2>Full Stack Developer</h2>\n        </header>\n\n        <div className=\"profile-bio\">\n          <p>\n            I'm a 22-year-old woman from Tucuman, Argentina.\n          </p>\n          <p>\n            I love giving tools to those who need them in the IT world\n          </p>\n        </div>\n\n        <ul className=\"profile-social-links\">\n          <li>\n            <a href=\"https://www.linkedin.com/in/sof%C3%ADa-parra-5a36b0205/\" rel=\"noopener noreferrer\" target=\"_blank\">\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/LinkedIn_logo_initials.png/640px-LinkedIn_logo_initials.png'\n                alt=\"LinkedIn\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href='https://github.com/sofiaparraweb' rel=\"noopener noreferrer\" target=\"_blank\">\n              <img\n                src='https://cdn-icons-png.flaticon.com/512/25/25231.png'\n                alt=\"GitHub\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/sofii.parra.792/\" rel=\"noopener noreferrer\" target=\"_blank\">\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Facebook_Logo_%282019%29.png/640px-Facebook_Logo_%282019%29.png'\n                alt=\"Facebook\"\n              />\n            </a>\n          </li>\n        </ul>\n      </aside>\n      <NavBar />\n    </div>\n  );\n}\n\nexport default About;\n","import './App.css';\nimport { Route, useLocation } from 'react-router-dom';\nimport { Landing, Home, Detail, Create, About } from './views/index';\nimport axios from 'axios';\naxios.defaults.baseURL = \"https://pokemon-back-jt9f.onrender.com\";\n\nfunction App() {\nconst location = useLocation();\n  \nreturn (\n    <div className=\"App\">\n      <Route exact path='/' component={Home} />\n      <Route exact path='/detail/:id' component={Detail} />\n      <Route exact path='/create' component={Create}/>\n      <Route exact path='/about' component={About}/>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  GET_POKEMONS,\n  GET_ALL_POKEMONS,\n  GET_POKEMON_NAME,\n  GET_POKEMON_DETAIL,\n  ORDER_BY_NAME,\n  ORDER_BY_ATTACK,\n  FILTER_TYPE,\n  GET_POKEMON_TYPE,\n  FILTER_DBAPI,\n  GET_POKEMON_IMG,\n} from './action-types';\n\nconst initialState = {\n  allPokemons: [],\n  pokemons: [],\n  types: \"\",\n  filteredPokemons: [],\n  pokemonsDetail: {},\n  userPokemons: [],\n  loading: false,\n  pokemonImages: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n  \n  // inicializo distintos estados para despues no pisarme\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        filteredPokemons: action.payload,\n        allPokemons: action.payload,\n        loading: false,\n      };\n\n case GET_ALL_POKEMONS: \n // Nueva acción para obtener todos los pokemons sin filtrar\n  // Actualiza el estado con todos los pokemons sin filtrar\n        return {\n        ...state,\n        filteredPokemons: state.allPokemons,\n        pokemons: state.allPokemons,\n      };\n\n    case GET_POKEMON_NAME:\n      // Actualiza el estado con los pokemons filtrados por nombre\n      return { ...state, pokemons: action.payload };\n\n    case GET_POKEMON_DETAIL:\n      // Actualiza el estado con los detalles de un pokemon específico\n      return { ...state, pokemonsDetail: action.payload };\n\n    //utilizo sort para comparar uno a uno por ataque. parseInt para hacerlos numeros\n      case ORDER_BY_ATTACK:\n      const isAscendingAttack = action.payload === \"asc\";\n      const sortedPokemonsAttack = [...state.filteredPokemons].sort((a, b) => {\n        const attackA = parseInt(a.attack);\n        const attackB = parseInt(b.attack);\n        if (isNaN(attackA) || isNaN(attackB)) {\n          return 0;\n        }\n        if (isAscendingAttack) {\n          return attackA - attackB;\n        } else {\n          return attackB - attackA;\n        }\n      });\n      return {\n        ...state,\n        filteredPokemons: sortedPokemonsAttack,\n      };\n\n   //utilizo sort para comparar uno a uno los nombres. toUpperCase para evitar errores \n   case ORDER_BY_NAME:\n      const isAscendingName = action.payload === \"asc\";\n      const sortedPokemonsName = [...state.filteredPokemons].sort((a, b) => {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n        if (nameA < nameB) {\n          return isAscendingName ? -1 : 1;\n        }\n        if (nameA > nameB) {\n          return isAscendingName ? 1 : -1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        filteredPokemons: sortedPokemonsName,\n      };\n\n    case FILTER_TYPE:\n      // Filtra los pokemons por tipo según el payload\n      const filteredTypePokemons = action.payload === \"\"\n        ? state.pokemons\n        : state.pokemons.filter((pokemon) => {\n          if (action.payload === \"All Types\") {\n            // Si el payload es \"All Types\", se muestran todos los pokemons\n          }\n          return pokemon.types.includes(action.payload);\n        });\n      return {\n        ...state,\n        filteredPokemons: filteredTypePokemons\n      };\n\n    case GET_POKEMON_TYPE:\n      return { ...state, types: action.payload };\n\n      case FILTER_DBAPI:\n        // Filtra los pokemons según el origen de los datos (API o Base de Datos)\n        if (action.payload !== '') { // Cambio aquí: de 'all' a ''\n          const filteredDbApi = state.pokemons.filter((pokemon) => {\n            if (action.payload === 'API') {\n              // Filtra los pokemons obtenidos de la API (cuyo ID no es un número)\n              return !isNaN(pokemon.id);\n            }\n            if (action.payload === 'DATABASE') {\n              // Filtra los pokemons obtenidos de la Base de Datos (cuyo ID es un número)\n              return isNaN(pokemon.id);\n            }\n            return false;\n          });\n          if (!filteredDbApi.length) alert('No pokemons found with this filter');\n          return { ...state, filteredPokemons: filteredDbApi };\n        }\n        // Si el payload es '', muestra todos los pokemons sin filtrar\n        return { ...state, filteredPokemons: state.pokemons };\n      \n  \n    case GET_POKEMON_IMG:\n      return {\n        ...state,\n        pokemonImages: action.payload,\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default rootReducer;\n","// EL ESTADO GLO BAL ES UN OBEJTO\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//esta linea sirve para conectar nuestra app con la extension REDUX DEVTOOLS DEL NAVEGADOR\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(thunkMiddleware))\n    //esta linea sirve para que podamos hacer peticiones a una Api/servdior\n);\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n   <App />\n  </BrowserRouter>\n  </Provider>,\n document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}